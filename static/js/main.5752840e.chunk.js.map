{"version":3,"sources":["components/header.js","components/table.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Table","arkTotal","toFixed","msTotal","okcTotal","moTotal","nmTotal","tnTotal","miTotal","ksTotal","georTotal","alaTotal","wyoTotal","indTotal","iowaTotal","nebTotal","ohTotal","knTotal","wvTotal","txsTotal","idaTotal","louisTotal","illTotal","ncTotal","scTotal","azTotal","wiTotal","floTotal","utTotal","ndTotal","sdTotal","vrgTotal","minnTotal","pennsTotal","colTotal","montTotal","delTotal","nvTotal","nhTotal","washTotal","vmTotal","maineTotal","riTotal","njTotal","cnTotal","mryTotal","alskTotal","massTotal","orgTotal","nyTotal","caliTotal","hawTotal","convertString","currency","input","commafy","Math","round","num","str","toString","split","length","replace","join","arkTotalCost","msTotalCost","okcTotalCost","moTotalCost","nmTotalCost","tnTotalCost","miTotalCost","ksTotalCost","georTotalCost","alaTotalCost","wyoTotalCost","indTotalCost","iowaTotalCost","nebTotalCost","ohTotalCost","knTotalCost","wvTotalCost","txsTotalCost","idaTotalCost","louisTotalCost","illTotalCost","ncTotalCost","scTotalCost","azTotalCost","wiTotalCost","floTotalCost","utTotalCost","ndTotalCost","sdTotalCost","vrgTotalCost","minnTotalCost","pennsTotalCost","colTotalCost","montTotalCost","delTotalCost","nvTotalCost","nhTotalCost","washTotalCost","vmTotalCost","maineTotalCost","riTotalCost","njTotalCost","cnTotalCost","mryTotalCost","alskTotalCost","massTotalCost","orgTotalCost","nyTotalCost","caliTotalCost","hawTotalCost","alaFinalSum","parseInt","slice","alskFinalSum","azFinalSum","arkFinalSum","caliFinalSum","colFinalSum","cnFinalSum","delFinalSum","floFinalSum","georFinalSum","hawFinalSum","idaFinalSum","illFinalSum","iowaFinalSum","indFinalSum","ksFinalSum","knFinalSum","louisFinalSum","maineFinalSum","mryFinalSum","massFinalSum","miFinalSum","minnFinalSum","msFinalSum","moFinalSum","montFinalSum","nebFinalSum","nvFinalSum","nhFinalSum","njFinalSum","nmFinalSum","nyFinalSum","ncFinalSum","ndFinalSum","ohFinalSum","okcFinalSum","orgFinalSum","pennsFinalSum","riFinalSum","scFinalSum","sdFinalSum","tnFinalSum","txsFinalSum","utFinalSum","vmFinalSum","vrgFinalSum","washFinalSum","wvFinalSum","wiFinalSum","wyoFinalSum","class","scope","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5752840e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <div className='head bg-light'>\n            <div className='header'>\n                <h1 className=\"later\">NursingRelocater</h1>\n            </div>\n            <nav className=\"navbar navbar-expand-lg navbar-light justify-content-center\">\n                <div className=\"navbar-nav\">\n                    <a className=\"nav-item nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                    <a className=\"nav-item nav-link\" href=\"#\">States</a>\n                    <a className=\"nav-item nav-link\" href=\"#\">Provinces</a>\n                    <a className=\"nav-item nav-link\" href=\"#\">Ranking</a>\n                    <a className=\"nav-item nav-link\" href=\"#\">Support Us</a>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst Table = () => {\n    const avgCost = 31848\n\n    const msCpi = 0.861\n    const arkCpi = 0.869\n    const okcCpi = 0.87\n    const moCpi = 0.871\n    const nmCpi = 0.875\n    const tnCpi = 0.887\n    const miCpi = 0.889\n    const ksCpi = 0.890\n    const georCpi = 0.892\n    const alaCpi = 0.893\n    const wyoCpi = 0.893\n    const indCpi = 0.9\n    const iowaCpi = 0.901\n    const nebCpi = 0.908\n    const ohCpi = 0.908\n    const knCpi = 0.909\n    const wvCpi = 0.911\n    const txsCpi = 0.915\n    const idaCpi = 0.923\n    const louisCpi = 0.939\n    const illCpi = 0.945\n    const ncCpi = 0.949\n    const scCpi = 0.959\n    const azCpi = 0.970\n    const wiCpi = 0.973\n    const floCpi = 0.979\n    const utCpi = 0.984\n    const ndCpi = 0.988\n    const sdCpi = 0.998\n    const vrgCpi = 1.007\n    const minnCpi = 1.016\n    const pennsCpi = 1.017\n    const colCpi = 1.056\n    const montCpi = 1.069\n    const delCpi = 1.081\n    const nvCpi = 1.085\n    const nhCpi = 1.097\n    const washCpi = 1.107\n    const vmCpi = 1.145\n    const maineCpi = 1.175\n    const riCpi = 1.194\n    const njCpi = 1.251\n    const cnCpi = 1.277\n    const mryCpi = 1.297\n    const alskCpi = 1.299\n    const massCpi = 1.316\n    const orgCpi = 1.342\n    const nyCpi = 1.391\n    const caliCpi = 1.517\n    const hawCpi = 1.929\n\n\n\n    let arkTotal = (avgCost * arkCpi).toFixed(0)\n    let msTotal = (avgCost * msCpi).toFixed(0)\n    let okcTotal = (avgCost * okcCpi).toFixed(0)\n    let moTotal = (avgCost * moCpi).toFixed(0)\n    let nmTotal = (avgCost * nmCpi).toFixed(0)\n    let tnTotal = (avgCost * tnCpi).toFixed(0)\n    let miTotal = (avgCost * miCpi).toFixed(0)\n    let ksTotal = (avgCost * ksCpi).toFixed(0)\n    let georTotal = (avgCost * georCpi).toFixed(0)\n    let alaTotal = (avgCost * alaCpi).toFixed(0)\n    let wyoTotal = (avgCost * wyoCpi).toFixed(0)\n    let indTotal = (avgCost * indCpi).toFixed(0)\n    let iowaTotal = (avgCost * iowaCpi).toFixed(0)\n    let nebTotal = (avgCost * nebCpi).toFixed(0)\n    let ohTotal = (avgCost * ohCpi).toFixed(0)\n    let knTotal = (avgCost * knCpi).toFixed(0)\n    let wvTotal = (avgCost * wvCpi).toFixed(0)\n    let txsTotal = (avgCost * txsCpi).toFixed(0)\n    let idaTotal = (avgCost * idaCpi).toFixed(0)\n    let louisTotal = (avgCost * louisCpi).toFixed(0)\n    let illTotal = (avgCost * illCpi).toFixed(0)\n    let ncTotal = (avgCost * ncCpi).toFixed(0)\n    let scTotal = (avgCost * scCpi).toFixed(0)\n    let azTotal = (avgCost * azCpi).toFixed(0)\n    let wiTotal = (avgCost * wiCpi).toFixed(0)\n    let floTotal = (avgCost * floCpi).toFixed(0)\n    let utTotal = (avgCost * utCpi).toFixed(0)\n    let ndTotal = (avgCost * ndCpi).toFixed(0)\n    let sdTotal = (avgCost * sdCpi).toFixed(0)\n    let vrgTotal = (avgCost * vrgCpi).toFixed(0)\n    let minnTotal = (avgCost * minnCpi).toFixed(0)\n    let pennsTotal = (avgCost * pennsCpi).toFixed(0)\n    let colTotal = (avgCost * colCpi).toFixed(0)\n    let montTotal = (avgCost * montCpi).toFixed(0)\n    let delTotal = (avgCost * delCpi).toFixed(0)\n    let nvTotal = (avgCost * nvCpi).toFixed(0)\n    let nhTotal = (avgCost * nhCpi).toFixed(0)\n    let washTotal = (avgCost * washCpi).toFixed(0)\n    let vmTotal = (avgCost * vmCpi).toFixed(0)\n    let maineTotal = (avgCost * maineCpi).toFixed(0)\n    let riTotal = (avgCost * riCpi).toFixed(0)\n    let njTotal = (avgCost * njCpi).toFixed(0)\n    let cnTotal = (avgCost * cnCpi).toFixed(0)\n    let mryTotal = (avgCost * mryCpi).toFixed(0)\n    let alskTotal = (avgCost * alskCpi).toFixed(0)\n    let massTotal = (avgCost * massCpi).toFixed(0)\n    let orgTotal = (avgCost * orgCpi).toFixed(0)\n    let nyTotal = (avgCost * nyCpi).toFixed(0)\n    let caliTotal = (avgCost * caliCpi).toFixed(0)\n    let hawTotal = (avgCost * hawCpi).toFixed(0)\n\n\n\n    function convertString(currency, input) {\n        var thisInt = Math.round(input); //this removes numbers after decimal   \n        var thisOutputValue = currency + commafy(thisInt); //add currency symbol and commas\n\n        return thisOutputValue;\n    }\n\n\n    function commafy(num) {\n        var str = num.toString().split('.');\n        if (str[0].length >= 5) {\n            str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\n        }\n        if (str[1] && str[1].length >= 5) {\n            str[1] = str[1].replace(/(\\d{3})/g, '$1 ');\n        }\n        return str.join('.');\n    }\n\n    const arkTotalCost = convertString('$', arkTotal) //change numbers into dollars\n    const msTotalCost = convertString('$', msTotal)\n    const okcTotalCost = convertString('$', okcTotal)\n    const moTotalCost = convertString('$', moTotal)\n    const nmTotalCost = convertString('$', nmTotal)\n    const tnTotalCost = convertString('$', tnTotal)\n    const miTotalCost = convertString('$', miTotal)\n    const ksTotalCost = convertString('$', ksTotal)\n    const georTotalCost = convertString('$', georTotal)\n    const alaTotalCost = convertString('$', alaTotal)\n    const wyoTotalCost = convertString('$', wyoTotal)\n    const indTotalCost = convertString('$', indTotal)\n    const iowaTotalCost = convertString('$', iowaTotal)\n    const nebTotalCost = convertString('$', nebTotal)\n    const ohTotalCost = convertString('$', ohTotal)\n    const knTotalCost = convertString('$', knTotal)\n    const wvTotalCost = convertString('$', wvTotal)\n    const txsTotalCost = convertString('$', txsTotal)\n    const idaTotalCost = convertString('$', idaTotal)\n    const louisTotalCost = convertString('$', louisTotal)\n    const illTotalCost = convertString('$', illTotal)\n    const ncTotalCost = convertString('$', ncTotal)\n    const scTotalCost = convertString('$', scTotal)\n    const azTotalCost = convertString('$', azTotal)\n    const wiTotalCost = convertString('$', wiTotal)\n    const floTotalCost = convertString('$', floTotal)\n    const utTotalCost = convertString('$', utTotal)\n    const ndTotalCost = convertString('$', ndTotal)\n    const sdTotalCost = convertString('$', sdTotal)\n    const vrgTotalCost = convertString('$', vrgTotal)\n    const minnTotalCost = convertString('$', minnTotal)\n    const pennsTotalCost = convertString('$', pennsTotal)\n    const colTotalCost = convertString('$', colTotal)\n    const montTotalCost = convertString('$', montTotal)\n    const delTotalCost = convertString('$', delTotal)\n    const nvTotalCost = convertString('$', nvTotal)\n    const nhTotalCost = convertString('$', nhTotal)\n    const washTotalCost = convertString('$', washTotal)\n    const vmTotalCost = convertString('$', vmTotal)\n    const maineTotalCost = convertString('$', maineTotal)\n    const riTotalCost = convertString('$', riTotal)\n    const njTotalCost = convertString('$', njTotal)\n    const cnTotalCost = convertString('$', cnTotal)\n    const mryTotalCost = convertString('$', mryTotal)\n    const alskTotalCost = convertString('$', alskTotal)\n    const massTotalCost = convertString('$', massTotal)\n    const orgTotalCost = convertString('$', orgTotal)\n    const nyTotalCost = convertString('$', nyTotal)\n    const caliTotalCost = convertString('$', caliTotal)\n    const hawTotalCost = convertString('$', hawTotal)\n\n    const alaAfterTax = 46722\n    const alaIntCost = parseInt(alaTotalCost.slice(1).split(\",\").join(\"\"));\n    const alaSum = alaAfterTax - alaIntCost\n    const alaFinalSum = commafy(alaSum)\n\n    const alskAfterTax = 70492\n    const alskIntCost = parseInt(alskTotalCost.slice(1).split(\",\").join(\"\"));\n    const alskSum = alskAfterTax - alskIntCost\n    const alskFinalSum = commafy(alskSum)\n\n    const azAfterTax = 59812\n    const azIntCost = parseInt(azTotalCost.slice(1).split(\",\").join(\"\"));\n    const azSum = azAfterTax - azIntCost\n    const azFinalSum = commafy(azSum)\n\n    const arkAfterTax = 47383\n    const arkIntCost = parseInt(arkTotalCost.slice(1).split(\",\").join(\"\"));\n    const arkSum = arkAfterTax - arkIntCost\n    const arkFinalSum = commafy(arkSum)\n\n    const caliAfterTax = 78875\n    const caliIntCost = parseInt(caliTotalCost.slice(1).split(\",\").join(\"\"));\n    const caliSum = caliAfterTax - caliIntCost\n    const caliFinalSum = commafy(caliSum)\n\n    const colAfterTax = 57489\n    const colIntCost = parseInt(colTotalCost.slice(1).split(\",\").join(\"\"));\n    const colSum = colAfterTax - colIntCost\n    const colFinalSum = commafy(colSum)\n\n    const cnAfterTax = 61386\n    const cnIntCost = parseInt(cnTotalCost.slice(1).split(\",\").join(\"\"));\n    const cnSum = cnAfterTax - cnIntCost\n    const cnFinalSum = commafy(cnSum)\n\n    const delAfterTax = 55303\n    const delIntCost = parseInt(delTotalCost.slice(1).split(\",\").join(\"\"));\n    const delSum = delAfterTax - delIntCost\n    const delFinalSum = commafy(delSum)\n\n    const floAfterTax = 54389\n    const floIntCost = parseInt(floTotalCost.slice(1).split(\",\").join(\"\"));\n    const floSum = floAfterTax - floIntCost\n    const floFinalSum = commafy(floSum)\n\n    const georAfterTax = 52373\n    const georIntCost = parseInt(georTotalCost.slice(1).split(\",\").join(\"\"));\n    const georSum = georAfterTax - georIntCost\n    const georFinalSum = commafy(georSum)\n\n    const hawAfterTax = 72316\n    const hawIntCost = parseInt(hawTotalCost.slice(1).split(\",\").join(\"\"));\n    const hawSum = hawAfterTax - hawIntCost\n    const hawFinalSum = commafy(hawSum)\n\n    const idaAfterTax = 52004\n    const idaIntCost = parseInt(idaTotalCost.slice(1).split(\",\").join(\"\"));\n    const idaSum = idaAfterTax - idaIntCost\n    const idaFinalSum = commafy(idaSum)\n\n    const illAfterTax = 55014\n    const illIntCost = parseInt(illTotalCost.slice(1).split(\",\").join(\"\"));\n    const illSum = illAfterTax - illIntCost\n    const illFinalSum = commafy(illSum)\n\n    const iowaAfterTax = 46988\n    const iowaIntCost = parseInt(iowaTotalCost.slice(1).split(\",\").join(\"\"));\n    const iowaSum = iowaAfterTax - iowaIntCost\n    const iowaFinalSum = commafy(iowaSum)\n\n    const indAfterTax = 50471\n    const indIntCost = parseInt(indTotalCost.slice(1).split(\",\").join(\"\"));\n    const indSum = indAfterTax - indIntCost\n    const indFinalSum = commafy(indSum)\n\n    const ksAfterTax = 47956\n    const ksIntCost = parseInt(ksTotalCost.slice(1).split(\",\").join(\"\"));\n    const ksSum = ksAfterTax - ksIntCost\n    const ksFinalSum = commafy(ksSum)\n\n    const knAfterTax = 48616\n    const knIntCost = parseInt(knTotalCost.slice(1).split(\",\").join(\"\"));\n    const knSum = knAfterTax - knIntCost\n    const knFinalSum = commafy(knSum)\n\n    const louisAfterTax = 51240\n    const louisIntCost = parseInt(louisTotalCost.slice(1).split(\",\").join(\"\"));\n    const louisSum = louisAfterTax - louisIntCost\n    const louisFinalSum = commafy(louisSum)\n\n    const maineAfterTax = 52501\n    const maineIntCost = parseInt(maineTotalCost.slice(1).split(\",\").join(\"\"));\n    const maineSum = maineAfterTax - maineIntCost\n    const maineFinalSum = commafy(maineSum)\n\n    const mryAfterTax = 56373\n    const mryIntCost = parseInt(mryTotalCost.slice(1).split(\",\").join(\"\"));\n    const mrySum = mryAfterTax - mryIntCost\n    const mryFinalSum = commafy(mrySum)\n\n    const massAfterTax = 67881\n    const massIntCost = parseInt(massTotalCost.slice(1).split(\",\").join(\"\"));\n    const massSum = massAfterTax - massIntCost\n    const massFinalSum = commafy(massSum)\n\n    const miAfterTax = 55398\n    const miIntCost = parseInt(miTotalCost.slice(1).split(\",\").join(\"\"));\n    const miSum = miAfterTax - miIntCost\n    const miFinalSum = commafy(miSum)\n\n    const minnAfterTax = 58962\n    const minnIntCost = parseInt(minnTotalCost.slice(1).split(\",\").join(\"\"));\n    const minnSum = minnAfterTax - minnIntCost\n    const minnFinalSum = commafy(minnSum)\n\n    const msAfterTax = 46467\n    const msIntCost = parseInt(msTotalCost.slice(1).split(\",\").join(\"\"));\n    const msSum = msAfterTax - msIntCost\n    const msFinalSum = commafy(msSum)\n\n    const moAfterTax = 49609\n    const moIntCost = parseInt(moTotalCost.slice(1).split(\",\").join(\"\"));\n    const moSum = moAfterTax - moIntCost\n    const moFinalSum = commafy(moSum)\n\n    const montAfterTax = 52210\n    const montIntCost = parseInt(montTotalCost.slice(1).split(\",\").join(\"\"));\n    const montSum = montAfterTax - montIntCost\n    const montFinalSum = commafy(montSum)\n\n    const nebAfterTax = 50524\n    const nebIntCost = parseInt(nebTotalCost.slice(1).split(\",\").join(\"\"));\n    const nebSum = nebAfterTax - nebIntCost\n    const nebFinalSum = commafy(nebSum)\n\n    const nvAfterTax = 69001\n    const nvIntCost = parseInt(nvTotalCost.slice(1).split(\",\").join(\"\"));\n    const nvSum = nvAfterTax - nvIntCost\n    const nvFinalSum = commafy(nvSum)\n\n    const nhAfterTax = 58800\n    const nhIntCost = parseInt(nhTotalCost.slice(1).split(\",\").join(\"\"));\n    const nhSum = nhAfterTax - nhIntCost\n    const nhFinalSum = commafy(nhSum)\n\n    const njAfterTax = 62938\n    const njIntCost = parseInt(njTotalCost.slice(1).split(\",\").join(\"\"));\n    const njSum = njAfterTax - njIntCost\n    const njFinalSum = commafy(njSum)\n\n    const nmAfterTax = 55678\n    const nmIntCost = parseInt(nmTotalCost.slice(1).split(\",\").join(\"\"));\n    const nmSum = nmAfterTax - nmIntCost\n    const nmFinalSum = commafy(nmSum)\n\n    const nyAfterTax = 60980\n    const nyIntCost = parseInt(nyTotalCost.slice(1).split(\",\").join(\"\"));\n    const nySum = nyAfterTax - nyIntCost\n    const nyFinalSum = commafy(nySum)\n\n    const ncAfterTax = 50603\n    const ncIntCost = parseInt(ncTotalCost.slice(1).split(\",\").join(\"\"));\n    const ncSum = ncAfterTax - ncIntCost\n    const ncFinalSum = commafy(ncSum)\n\n    const ndAfterTax = 52728\n    const ndIntCost = parseInt(ndTotalCost.slice(1).split(\",\").join(\"\"));\n    const ndSum = ndAfterTax - ndIntCost\n    const ndFinalSum = commafy(ndSum)\n\n    const ohAfterTax = 51663\n    const ohIntCost = parseInt(ohTotalCost.slice(1).split(\",\").join(\"\"));\n    const ohSum = ohAfterTax - ohIntCost\n    const ohFinalSum = commafy(ohSum)\n\n    const okcAfterTax = 49728\n    const okcIntCost = parseInt(okcTotalCost.slice(1).split(\",\").join(\"\"));\n    const okcSum = okcAfterTax - okcIntCost\n    const okcFinalSum = commafy(okcSum)\n\n    const orgAfterTax = 64927\n    const orgIntCost = parseInt(orgTotalCost.slice(1).split(\",\").join(\"\"));\n    const orgSum = orgAfterTax - orgIntCost\n    const orgFinalSum = commafy(orgSum)\n\n    const pennsAfterTax = 54156\n    const pennsIntCost = parseInt(pennsTotalCost.slice(1).split(\",\").join(\"\"));\n    const pennsSum = pennsAfterTax - pennsIntCost\n    const pennsFinalSum = commafy(pennsSum)\n\n    const riAfterTax = 62072\n    const riIntCost = parseInt(riTotalCost.slice(1).split(\",\").join(\"\"));\n    const riSum = riAfterTax - riIntCost\n    const riFinalSum = commafy(riSum)\n\n    const scAfterTax = 49271\n    const scIntCost = parseInt(scTotalCost.slice(1).split(\",\").join(\"\"));\n    const scSum = scAfterTax - scIntCost\n    const scFinalSum = commafy(scSum)\n\n    const sdAfterTax = 48712\n    const sdIntCost = parseInt(sdTotalCost.slice(1).split(\",\").join(\"\"));\n    const sdSum = sdAfterTax - sdIntCost\n    const sdFinalSum = commafy(sdSum)\n\n    const tnAfterTax = 50843\n    const tnIntCost = parseInt(tnTotalCost.slice(1).split(\",\").join(\"\"));\n    const tnSum = tnAfterTax - tnIntCost\n    const tnFinalSum = commafy(tnSum)\n\n    const txsAfterTax = 59264\n    const txsIntCost = parseInt(txsTotalCost.slice(1).split(\",\").join(\"\"));\n    const txsSum = txsAfterTax - txsIntCost\n    const txsFinalSum = commafy(txsSum)\n\n    const utAfterTax = 51278\n    const utIntCost = parseInt(utTotalCost.slice(1).split(\",\").join(\"\"));\n    const utSum = utAfterTax - utIntCost\n    const utFinalSum = commafy(utSum)\n\n    const vmAfterTax = 53574\n    const vmIntCost = parseInt(vmTotalCost.slice(1).split(\",\").join(\"\"));\n    const vmSum = vmAfterTax - vmIntCost\n    const vmFinalSum = commafy(vmSum)\n\n    const vrgAfterTax = 53823\n    const vrgIntCost = parseInt(vrgTotalCost.slice(1).split(\",\").join(\"\"));\n    const vrgSum = vrgAfterTax - vrgIntCost\n    const vrgFinalSum = commafy(vrgSum)\n\n    const washAfterTax = 67446\n    const washIntCost = parseInt(washTotalCost.slice(1).split(\",\").join(\"\"));\n    const washSum = washAfterTax - washIntCost\n    const washFinalSum = commafy(washSum)\n\n    const wvAfterTax = 48446\n    const wvIntCost = parseInt(wvTotalCost.slice(1).split(\",\").join(\"\"));\n    const wvSum = wvAfterTax - wvIntCost\n    const wvFinalSum = commafy(wvSum)\n\n    const wiAfterTax = 54043\n    const wiIntCost = parseInt(wiTotalCost.slice(1).split(\",\").join(\"\"));\n    const wiSum = wiAfterTax - wiIntCost\n    const wiFinalSum = commafy(wiSum)\n\n    const wyoAfterTax = 55149\n    const wyoIntCost = parseInt(wyoTotalCost.slice(1).split(\",\").join(\"\"));\n    const wyoSum = wyoAfterTax - wyoIntCost\n    const wyoFinalSum = commafy(wyoSum)\n\n\n\n    return (\n        <div className='container'>\n            <div>\n                <table class=\"table table-hover\">\n                    <thead>\n                        <tr className=\"the-font\">\n                            <th scope=\"col\">State</th>\n                            <th scope=\"col\" className='text-primary'>Yearly Wage</th>\n                            <th scope=\"col\" className='text-warning'>$ After Income Tax</th>\n                            <th scope=\"col\" className='text-danger'>Cost Of Living</th>\n                            {/* <th scope=\"col\">Jobs Surplus</th> */}\n                            <th scope=\"col\" className='text-success'>Disposable Income</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Alabama</th>\n                            <td>$60,230</td>\n                            <td>$46,722</td>\n                            <td>{alaTotalCost}</td>\n                            <td>${alaFinalSum}</td>\n\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Alaska</th>\n                            <td>$90,500</td>\n                            <td>$70,492</td>\n                            <td>{alskTotalCost}</td>\n                            <td>${alskFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Arizona</th>\n                            <td>$78,330</td>\n                            <td>$59,812</td>\n                            <td>{azTotalCost}</td>\n                            <td>${azFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Arkansas</th>\n                            <td>$61,330</td>\n                            <td>$47,383</td>\n                            <td>{arkTotalCost}</td>\n                            <td>${arkFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">California</th>\n                            <td>$113,240</td>\n                            <td>$78,875</td>\n                            <td>{caliTotalCost}</td>\n                            <td>${caliFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Colorado</th>\n                            <td>$76,230</td>\n                            <td>$57,489</td>\n                            <td>{colTotalCost}</td>\n                            <td>${colFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Connecticut</th>\n                            <td>$83,440</td>\n                            <td>$61,386</td>\n                            <td>{cnTotalCost}</td>\n                            <td>${cnFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Delaware</th>\n                            <td>$74,100</td>\n                            <td>$55,303</td>\n                            <td>{delTotalCost}</td>\n                            <td>${delFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Florida</th>\n                            <td>$67,610</td>\n                            <td>$54,389</td>\n                            <td>{floTotalCost}</td>\n                            <td>${floFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Georgia</th>\n                            <td>$69,590</td>\n                            <td>$52,373</td>\n                            <td>{georTotalCost}</td>\n                            <td>${georFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Hawaii</th>\n                            <td>$104,060</td>\n                            <td>$72,316</td>\n                            <td>{hawTotalCost}</td>\n                            <td>${hawFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Idaho</th>\n                            <td>$69,480</td>\n                            <td>$52,004</td>\n                            <td>{idaTotalCost}</td>\n                            <td>${idaFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Illinois</th>\n                            <td>$73,510</td>\n                            <td>$55,014</td>\n                            <td>{illTotalCost}</td>\n                            <td>${illFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Indiana</th>\n                            <td>$66,560</td>\n                            <td>$50,471</td>\n                            <td>{indTotalCost}</td>\n                            <td>${indFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Iowa</th>\n                            <td>$60,590</td>\n                            <td>$46,988</td>\n                            <td>{iowaTotalCost}</td>\n                            <td>${iowaFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Kansas</th>\n                            <td>$62,450</td>\n                            <td>$47,956</td>\n                            <td>{ksTotalCost}</td>\n                            <td>${ksFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Kentucky</th>\n                            <td>$63,750</td>\n                            <td>$48,616</td>\n                            <td>{knTotalCost}</td>\n                            <td>${knFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Louisiana</th>\n                            <td>$65,850</td>\n                            <td>$51,240</td>\n                            <td>{louisTotalCost}</td>\n                            <td>${louisFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Maine</th>\n                            <td>$69,760</td>\n                            <td>$52,501</td>\n                            <td>{maineTotalCost}</td>\n                            <td>${maineFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Maryland</th>\n                            <td>$77,910</td>\n                            <td>$56,373</td>\n                            <td>{mryTotalCost}</td>\n                            <td>${mryFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Massachusetts</th>\n                            <td>$93,160</td>\n                            <td>$67,881</td>\n                            <td>{massTotalCost}</td>\n                            <td>${massFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Michigan</th>\n                            <td>$73,200</td>\n                            <td>$55,398</td>\n                            <td>{miTotalCost}</td>\n                            <td>${miFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Minnesota</th>\n                            <td>$80,130</td>\n                            <td>$58,962</td>\n                            <td>{minnTotalCost}</td>\n                            <td>${minnFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Mississippi</th>\n                            <td>$59,750</td>\n                            <td>$46,467</td>\n                            <td>{msTotalCost}</td>\n                            <td>${msFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Missouri</th>\n                            <td>$64,160</td>\n                            <td>$49,609</td>\n                            <td>{moTotalCost}</td>\n                            <td>${moFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Montana</th>\n                            <td>$69,340</td>\n                            <td>$52,210</td>\n                            <td>{montTotalCost}</td>\n                            <td>${montFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Nebraska</th>\n                            <td>$66,640</td>\n                            <td>$50,524</td>\n                            <td>{nebTotalCost}</td>\n                            <td>${nebFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Nevada</th>\n                            <td>$88,380</td>\n                            <td>$69,001</td>\n                            <td>{nvTotalCost}</td>\n                            <td>${nvFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">New Hampshire</th>\n                            <td>$73,880</td>\n                            <td>$58,800</td>\n                            <td>{nhTotalCost}</td>\n                            <td>${nhFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">New Jersey</th>\n                            <td>$84,280</td>\n                            <td>$62,938</td>\n                            <td>{njTotalCost}</td>\n                            <td>${njFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">New Mexico</th>\n                            <td>$73,300</td>\n                            <td>$55,678</td>\n                            <td>{nmTotalCost}</td>\n                            <td>${nmFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">New York</th>\n                            <td>$87,840</td>\n                            <td>$60,980</td>\n                            <td>{nyTotalCost}</td>\n                            <td>${nyFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">North Carolina</th>\n                            <td>$66,440</td>\n                            <td>$50,603</td>\n                            <td>{ncTotalCost}</td>\n                            <td>${ncFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">North Dakota</th>\n                            <td>$66,290</td>\n                            <td>$52,728</td>\n                            <td>{ndTotalCost}</td>\n                            <td>${ndFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Ohio</th>\n                            <td>$68,220</td>\n                            <td>$51,663</td>\n                            <td>{ohTotalCost}</td>\n                            <td>${ohFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Oklahoma</th>\n                            <td>$64,800</td>\n                            <td>$49,728</td>\n                            <td>{okcTotalCost}</td>\n                            <td>${okcFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Oregon</th>\n                            <td>$92,960</td>\n                            <td>$64,927</td>\n                            <td>{orgTotalCost}</td>\n                            <td>${orgFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Pennsylvania</th>\n                            <td>$71,410</td>\n                            <td>$54,156</td>\n                            <td>{pennsTotalCost}</td>\n                            <td>${pennsFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Rhode Island</th>\n                            <td>$82,310</td>\n                            <td>$62,072</td>\n                            <td>{riTotalCost}</td>\n                            <td>${riFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">South Carolina</th>\n                            <td>$64,840</td>\n                            <td>$49,271</td>\n                            <td>{scTotalCost}</td>\n                            <td>${scFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">South Dakota</th>\n                            <td>$59,540</td>\n                            <td>$48,712</td>\n                            <td>{sdTotalCost}</td>\n                            <td>${sdFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Tennessee</th>\n                            <td>$62,570</td>\n                            <td>$50,843</td>\n                            <td>{tnTotalCost}</td>\n                            <td>${tnFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Texas</th>\n                            <td>$74,540</td>\n                            <td>$59,264</td>\n                            <td>{txsTotalCost}</td>\n                            <td>${txsFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Utah</th>\n                            <td>$67,970</td>\n                            <td>$51,278</td>\n                            <td>{utTotalCost}</td>\n                            <td>${utFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Vermont</th>\n                            <td>$70,240</td>\n                            <td>$53,574</td>\n                            <td>{vmTotalCost}</td>\n                            <td>${vmFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Virginia</th>\n                            <td>$71,870</td>\n                            <td>$53,823</td>\n                            <td>{vrgTotalCost}</td>\n                            <td>${vrgFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Washington</th>\n                            <td>$86,170</td>\n                            <td>$67,446</td>\n                            <td>{washTotalCost}</td>\n                            <td>${washFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">West Virginia</th>\n                            <td>$63,220</td>\n                            <td>$48,446</td>\n                            <td>{wvTotalCost}</td>\n                            <td>${wvFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Wisconsin</th>\n                            <td>$72,610</td>\n                            <td>$54,043</td>\n                            <td>{wiTotalCost}</td>\n                            <td>${wiFinalSum}</td>\n                        </tr>\n                        <tr>\n                            <th scope=\"row\">Wyoming</th>\n                            <td>$68,690</td>\n                            <td>$55,149</td>\n                            <td>{wyoTotalCost}</td>\n                            <td>${wyoFinalSum}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Table;","import React from 'react';\nimport Header from './components/header'\nimport Table from './components/table'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}